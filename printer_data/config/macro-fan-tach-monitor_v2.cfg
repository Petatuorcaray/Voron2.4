# Author: alch3my#9819 / modified by rootdsigns
# Requires a 3-wire fan with tachometer_pin defined. https://www.klipper3d.org/Config_Reference.html#heater_fan
# The tach wire can be connected to a spare endstop pin. 
# Don't forget a pullup (^) on the tach pin (example: tachometer_pin: ^P1.29)

# he -> Hotend Cooling Fan
# pt -> Part Cooling Fan

# Monitoring loop. Begins at Klipper start.
[delayed_gcode CHECK_ALL_FANS]
initial_duration: 1
gcode:
    HOTEND_FAN_CHECK
    #PART_FAN_CHECK
    UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS DURATION=3


# Change min_rpm and max_consecutive_stops to your desired values.
[gcode_macro HOTEND_FAN_CHECK]
variable_he_stop_count: 0
variable_he_min_rpm: 6500 #can be modified to disable monitoring during printing
gcode:
   #{% set he_min_rpm = 6500|float %}
    {% set he_max_consecutive_stops = 5 %}
    {% set he_rpm = printer['heater_fan hotend_fan'].rpm|float %}
    {% set he_target = printer[printer.toolhead.extruder].target|float %}
    {% set he_temp = printer[printer.toolhead.extruder].temperature|float %}
    {% set he_fan_on_temp = printer.configfile.settings['heater_fan hotend_fan'].heater_temp|float %}
    {% set he_stop_count = printer["gcode_macro HOTEND_FAN_CHECK"].he_stop_count|int %}

    {% if (he_target >= he_fan_on_temp) and (he_rpm < he_min_rpm) and (he_temp >= he_fan_on_temp) %}
        SET_GCODE_VARIABLE MACRO=HOTEND_FAN_CHECK VARIABLE=he_stop_count VALUE={he_stop_count + 1}
        M118 WARNING: Hotend Fan stoppage detected ({he_stop_count+1}/{he_max_consecutive_stops}).
        #M400 moved to line 30
        {% if printer["gcode_macro HOTEND_FAN_CHECK"].he_stop_count|int >= he_max_consecutive_stops-1 %}
            M400 #wait for movement to finish
            HOTEND_FAN_STOPPAGE_ROUTINE
        {% endif %}
    {% else %}
        SET_GCODE_VARIABLE MACRO=HOTEND_FAN_CHECK VARIABLE=he_stop_count VALUE=0
    {% endif %}


# Change constant_pwm_speed and max_consecutive_stops to your desired values.
[gcode_macro PART_FAN_CHECK]
variable_pt_stop_count: 0
variable_pt_prev_pwm: 0
gcode:
    {% set constant_pwm_speed = 4600 %}
    {% set pt_max_consecutive_stops = 5 %}
    {% set pt_rpm = printer['fan'].rpm|float %}
    {% set pt_pwm = printer['fan'].speed|float %}
    {% set pt_the_rpm = pt_pwm * constant_pwm_speed %}  #calculate theorical rpm

    #give 500 rpm margin below theorical rpm and discard 1 cycle speed changes due pwm set
    {% if (pt_rpm < (pt_the_rpm - 500)) and (pt_prev_pwm == pt_pwm) %}
        SET_GCODE_VARIABLE MACRO=PART_FAN_CHECK VARIABLE=pt_stop_count VALUE={pt_stop_count + 1}
        M118 WARNING: Part cooling Fan stoppage detected ({pt_stop_count+1}/{pt_max_consecutive_stops}).
        {% if printer["gcode_macro PART_FAN_CHECK"].pt_stop_count|int >= pt_max_consecutive_stops-1 %}
            M400 #wait for movement to finish
            PART_COOLING_FAN_STOPPAGE_ROUTINE
        {% endif %}
    {% else %}
        SET_GCODE_VARIABLE MACRO=PART_FAN_CHECK VARIABLE=pt_stop_count VALUE=0
    {% endif %}

    #display values for debugging
    #M118 Fan {pt_rpm} rpm / Prev {pt_prev_rpm} / {pt_the_rpm} theorical

    #save pwm value of last macro execution
    SET_GCODE_VARIABLE MACRO=PART_FAN_CHECK VARIABLE=pt_prev_pwm VALUE={pt_pwm}


# This runs every ~3 seconds until the stop conditions are cleared.
# Insert the gcode that you want to run when the hotend fan stoppage is detected.
[gcode_macro HOTEND_FAN_STOPPAGE_ROUTINE]
gcode:
    # If not already paused
    {% if printer['pause_resume'].is_paused|int == 0 %}
        PAUSE
    {% endif %}
        M117 !!FAN RPM FAILURE!!
        M118 HOTEND FAN RPM FAILURE DETECTED. PAUSING...
        M118 ¡¡¡TURN ON HOTEND BEFORE RESUME!!!
        # Turn off the hotend. 
        # !! Don't forget to turn your hotend back on before resume. !!
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0


# Insert the gcode that you want to run when the part cooling fan stoppage is detected.
[gcode_macro PART_COOLING_FAN_STOPPAGE_ROUTINE]
gcode:
    # If not already paused
    {% if printer['pause_resume'].is_paused|int == 0 %}
        PAUSE
    {% endif %}
        M117 !!FAN RPM FAILURE!!
        M118 PART COOLING FAN RPM FAILURE DETECTED. PAUSING...
        M118 ¡¡¡SET FAN SPEED BEFORE RESUME!!!
        # Turn off the part cooling fan. 
        # !! Don't forget to turn your fan back on if needed before resume. !!
        M107


# Change min_rpm to your desired values.
[gcode_macro ENABLE_HOTEND_FAN_MONITORING]
gcode:
    SET_GCODE_VARIABLE MACRO=HOTEND_FAN_CHECK VARIABLE=he_min_rpm VALUE=6500


[gcode_macro DISABLE_HOTEND_FAN_MONITORING]
gcode:
    SET_GCODE_VARIABLE MACRO=HOTEND_FAN_CHECK VARIABLE=he_min_rpm VALUE=0